(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{382:function(t,v,_){"use strict";_.r(v);var e=_(48),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("正则表达式，英文是 Regular Expression，简称 RE。顾名思义，正则其实就是一种描述文本内容组成规律的表示方式。")]),t._v(" "),_("h2",{attrs:{id:"特殊字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符"}},[t._v("#")]),t._v(" 特殊字符")]),t._v(" "),_("p",[t._v("我们主要是使用正则中"),_("strong",[t._v("特殊字符")]),t._v("来描述文本的组成规律，但正则有很多的"),_("strong",[t._v("特殊字符")]),t._v("，例如"),_("code",[t._v("\\d")]),t._v("、"),_("code",[t._v("\\w")]),t._v("、"),_("code",[t._v("+")]),t._v("、"),_("code",[t._v("*")]),t._v("、"),_("code",[t._v("?")]),t._v("等等。 学习的时候，不禁感叹这些"),_("strong",[t._v("特殊字符")]),t._v("记忆起来困难，用起来也困难。")]),t._v(" "),_("h3",{attrs:{id:"规律"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#规律"}},[t._v("#")]),t._v(" 规律")]),t._v(" "),_("p",[t._v("其实这个"),_("strong",[t._v("特殊字符")]),t._v("是有分类的，每一类符号有不同的意义。我们不需要记住所有的"),_("strong",[t._v("特殊字符")]),t._v("，只需要知道每一类符号的含义。然后在写正则的时候，知道什么时候该用哪类符号，然后到该类符号中去找对应的"),_("strong",[t._v("特殊字符")]),t._v("即可。")]),t._v(" "),_("h3",{attrs:{id:"例子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),_("p",[_("strong",[t._v("匹配邮政编码(000001)")])]),t._v(" "),_("ol",[_("li",[t._v("首先，我们要匹配数字，这是我们就可以想到"),_("strong",[t._v("字符类")]),t._v("的特殊字符。"),_("strong",[t._v("字符类")]),t._v("用来区分不同类型的字符，例如 "),_("code",[t._v("\\d")]),t._v(" 表示 0-9 的数字，"),_("code",[t._v("\\w")]),t._v(" 任何字母数字和下划线。我们就可以写出一个简单的正则 "),_("code",[t._v("\\d\\d\\d\\d\\d\\d")]),t._v("。")]),t._v(" "),_("li",[t._v("你肯定会想，如果我要匹配 100 个数字，我要写 100 个 "),_("code",[t._v("\\d")]),t._v(" 吗？这时就需要表示字符数量的"),_("strong",[t._v("量词")]),t._v("出场了，"),_("code",[t._v("x{m}")]),t._v(' 表示匹配 m 个 "x"。 所以就可以写出更简单的正则表达式 '),_("code",[t._v("\\d{6}")]),t._v("。")])]),t._v(" "),_("h3",{attrs:{id:"分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),_("p",[t._v("有没有很简单？正则表达式中一共有四类"),_("strong",[t._v("特殊字符")]),t._v("，我们只需要记住这四个分类以及使用的场景，然后在对应的分类中找特定的"),_("strong",[t._v("特殊字符")]),t._v("，就可以应付绝大多数的正则场景。这四类"),_("strong",[t._v("特殊字符")]),t._v("分别是：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("特殊字符")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("字符类")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("区分不同类型的字符，例如区分字母和数字")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("量词")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("表示表达式字符的分组和范围")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("断言")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("表示一个匹配在某些条件下发生")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("组和范围")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("表示表达式字符的分组和范围")])])])]),t._v(" "),_("p",[t._v("在后面的篇章中，我们会分别介绍每个分类的含义及所包含的"),_("strong",[t._v("特殊字符")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"转义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#转义"}},[t._v("#")]),t._v(" 转义")]),t._v(" "),_("p",[t._v("如果现在我们要查找比如星号（*）、加号（+）、问号（?）本身，而不是"),_("strong",[t._v("特殊字符")]),t._v("的功能，这时候就需要对其进行"),_("strong",[t._v("转义")]),t._v("，直接在前面加上反斜杠就可以了。\n例如，"),_("code",[t._v("\\d")]),t._v(" 匹配的是 0-9 的数字。如果我们在 "),_("code",[t._v("\\d")]),t._v(" 前面加一个 "),_("code",[t._v("\\")]),t._v(", "),_("code",[t._v("\\\\d")]),t._v(" 匹配的就是字符串"),_("code",[t._v('"\\d"')]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"匹配模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#匹配模式"}},[t._v("#")]),t._v(" 匹配模式")]),t._v(" "),_("p",[t._v("待完成")])])}),[],!1,null,null,null);v.default=r.exports}}]);